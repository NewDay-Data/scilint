# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/utils.ipynb.

# %% auto 0
__all__ = ['load_nb', 'load_nb_module']

# %% ../nbs/utils.ipynb 2
import _ast
import ast
from pathlib import Path
import nbformat

from nbdev.processors import _default_exp
from execnb.nbio import read_nb
from nbdev.export import get_config

# %% ../nbs/utils.ipynb 3
def load_nb(nb_path):
    nb = read_nb(nb_path)
    default_export = _default_exp(nb)
    if default_export is None:
        raise ValueError(f"{nb_path.name} does not contain an associated nbdev module")

    module_name = default_export.replace(".", "/")
    module_path = Path(get_config().path("lib_path"), f"{module_name}.py")
    return nb, module_path

# %% ../nbs/utils.ipynb 5
def load_nb_module(nb_path):
    nb, module_path = load_nb(nb_path)
    with open(module_path, "r") as module_file:
        lines = module_file.readlines()
    module_code = "\n".join(lines)
    return nb, module_code
